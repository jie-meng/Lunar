<<<<<<< HEAD
assert(v [, message])
collectgarbage([opt [, arg]])
dofile([filename])
error(message [, level])
_G
getfenv([f])
getmetatable(object)
ipairs(t)
load(func [, chunkname])
loadfile([filename])
loadstring(string [, chunkname])
next(table [, index])
pairs(t)
pcall(f, arg1, ...)
print(...)
rawequal(v1, v2)
rawget(table, index)
rawset(table, index, value)
select(index, ...)
setfenv(f, table)
setmetatable(table, metatable)
tonumber(e [, base])
tostring(e)
type(v)
unpack(list [, i [, j]])
_VERSION
xpcall(f, err)
=======
assert(s)
collectgarbage(arg)
dofile(filename)
error(err_str)
print(s)
tonumber(s)
tostring(d)
type(t)
sleep(s)
msleep(ms)
include(filename)
run(filename)
require(module)
setmetatable(a, {__index = b})
pairs(table)
>>>>>>> linux
