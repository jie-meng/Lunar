string.capitalize()
string.casefold()
string.center(width[, fillchar])
string.count(sub[, start[, end]])
string.encode(encoding="utf-8", errors="strict")
string.endswith(suffix[, start[, end]])
string.expandtabs(tabsize=8)
string.find(sub[, start[, end]])
string.format(*args, **kwargs)
string.format_map(mapping)
string.index(sub[, start[, end]])
string.isalnum()
string.isalpha()
string.isdecimal()
string.isdigit()
string.isidentifier()
string.islower()
string.isnumeric()
string.isprintable()
string.isspace()
string.istitle()
string.isupper()
string.join(iterable)
string.ljust(width[, fillchar])
string.lower()
string.lstrip([chars])
string.maketrans(x[, y[, z]])
string.partition(sep)
string.replace(old, new[, count])
string.rfind(sub[, start[, end]])
string.rindex(sub[, start[, end]])
string.rjust(width[, fillchar])
string.rpartition(sep)
string.rsplit(sep=None, maxsplit=-1)
string.rstrip([chars])
string.split(sep=None, maxsplit=-1)
string.splitlines([keepends])
string.startswith(prefix[, start[, end]])
string.strip([chars])
string.swapcase()
string.title()
string.translate(map)
string.upper()
string.zfill(width)
bytes.count(sub[, start[, end]])
bytes.decode(encoding="utf-8", errors="strict")
bytes.endswith(suffix[, start[, end]])
bytes.find(sub[, start[, end]])
bytes.index(sub[, start[, end]])
bytes.join(iterable)
bytes.maketrans(from, to)
bytes.partition(sep)
bytes.replace(old, new[, count])
bytes.rfind(sub[, start[, end]])
bytes.rindex(sub[, start[, end]])
bytes.rpartition(sep)
bytes.startswith(prefix[, start[, end]])
bytes.translate(table[, delete])
bytes.center(width[, fillbyte])
bytes.ljust(width[, fillbyte])
bytes.lstrip([chars])
bytes.rjust(width[, fillbyte])
bytes.rsplit(sep=None, maxsplit=-1)
bytes.rstrip([chars])
bytes.split(sep=None, maxsplit=-1)
bytes.strip([chars])
bytes.capitalize()
bytes.expandtabs(tabsize=8)
bytes.isalnum()
bytes.isalpha()
bytes.isdigit()
bytes.islower()
bytes.isspace()
bytes.istitle()
bytes.isupper()
bytes.lower()
bytes.splitlines(keepends=False)
bytes.swapcase()
bytes.title()
bytes.upper()
bytes.zfill(width)
list.append(x)
list.extend(L)
list.insert(i, x)
list.remove(x)
list.pop([i])
list.clear()
list.index(x)
list.count(x)
list.sort()
list.reverse()
list.copy()
dict.iter()
dict.clear()
dict.copy()
dict.fromkeys(seq[, value])
dict.get(key[, default])
dict.items()
dict.keys()
dict.pop(key[, default)
dict.popitem()
dict.keys()
dict.setdefault(key[, default])
dict.update([othter])
dict.values()
set.len(s)
set.isdisjoint(other)
set.issubset(other)
set.issuperset(other)
set.union(other, ...)
set.intersection(other, ...)
set.difference(other, ...)
set.symmetric_difference(other)
set.copy()
set.update(other, ...)
set.intersection_update(other, ...)
set.difference_update(other, ...)
set.symmetric_difference_update(other)
set.add(elem)
set.remove(elem)
set.discard(elem)
set.pop()
set.clear()
memoryview.tobytes()
memoryview.tolist()
memoryview.release()
memoryview.cast(format[, shape])