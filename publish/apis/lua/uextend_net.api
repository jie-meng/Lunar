net.ipArrayToStr(family, p, len) -> string
net.ipStrToArray(family, s, p, len) -> userdata
net.htons(uint16) -> number
net.ntohs(uint16) -> number
net.htonl(uint32) -> number
net.ntohl(uint32) -> number
net.udpCreate(family = 1) -> userdata (udp object)
net.udpDestroy(udp)
net.udpGetSocket(udp) -> number
net.udpInit(udp) -> boolean
net.udpIsOk(udp) -> boolean
net.udpSetBlock(udp, block) -> number
net.udpBind(udp, ip, port) -> boolean
net.udpRecvFrom(udp) -> number, string (ip), number (port)
net.udpSendTo(udp, [p, s], len, ip, port) -> number
net.udpGetRecvBuf(udp) -> userdata
net.udpClose(udp) -> boolean
net.tcpCreate(family = 1) -> userdata (tcp object)
net.tcpDestroy(tcp)
net.tcpGetSocket(tcp) -> number
net.tcpInit(tcp) -> boolean
net.tcpIsOk(tcp) -> boolean
net.tcpSetBlock(tcp, block) -> number
net.tcpBind(tcp, ip, port) -> boolean
net.tcpListen(tcp, n) -> boolean
net.tcpAccept(tcp) -> number
net.tcpConnect(tcp, ip, port) -> boolean
net.tcpClientRecv(tcp) -> number
net.tcpClientSend(tcp, [p, s], len) -> number
net.tcpServerRecv(tcp, client_socket) -> number
net.tcpServerSend(tcp, client_socket, [p, s], len) -> number
net.tcpGetRecvBuf(tcp) -> userdata
net.tcpClose(tcp) -> boolean
net.rawCreate(family = 1, protocol) -> userdata (raw-socket object)
net.rawDestroy(raw)
net.rawGetSocket(raw) -> number
net.rawInit(raw) -> boolean
net.rawIsOk(raw) -> boolean
net.rawSetBlock(raw, block) -> number
net.rawBind(raw, ip, port) -> boolean
net.rawRecvFrom(raw, buf, len) -> number, string (ip), number (port)
net.rawSendTo(raw, [p, s], len, ip, port) -> number
net.rawListen(raw, n) -> boolean
net.rawAccept(raw) -> string (ip), number (port) 
net.rawConnect(raw, ip, port) -> boolean
net.rawRecv(raw, sock, buf, len) -> number
net.rawSend(raw, sock, [p, s], len) -> number
net.rawClose(raw) -> boolean
net.closeSocket(socket) -> number
